<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="MDs-Air-2.home" failures="0" tests="15" name="testCases.HybridExcuteTests" time="2.000" errors="1" timestamp="15 Jul 2019 14:15:02 GMT" skipped="14">
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="setup" time="2.000">
    <error message="invalid argument: can&#039;t kill an exited process
Build info: version: &#039;3.14.0&#039;, revision: &#039;aacccce0&#039;, time: &#039;2018-08-02T20:19:58.91Z&#039;
System info: host: &#039;MDs-Air-2.home&#039;, ip: &#039;fe80:0:0:0:1c37:18eb:357b:973a%en0&#039;, os.name: &#039;Mac OS X&#039;, os.arch: &#039;x86_64&#039;, os.version: &#039;10.12.6&#039;, java.version: &#039;11.0.2&#039;
Driver info: driver.version: FirefoxDriver
remote stacktrace: " type="org.openqa.selenium.WebDriverException">
      <![CDATA[org.openqa.selenium.WebDriverException: invalid argument: can't kill an exited process
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'MDs-Air-2.home', ip: 'fe80:0:0:0:1c37:18eb:357b:973a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '11.0.2'
Driver info: driver.version: FirefoxDriver
remote stacktrace: 
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:122)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:103)
at operation.AbstractClass.setup(AbstractClass.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setup -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
  <testcase classname="testCases.HybridExcuteTests" name="AplicationUnderTest" time="0.000">
    <skipped/>
  </testcase> <!-- AplicationUnderTest -->
</testsuite> <!-- testCases.HybridExcuteTests -->
